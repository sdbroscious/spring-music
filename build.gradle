apply plugin: 'propdeps'
apply plugin: 'propdeps-maven'
apply plugin: 'propdeps-idea'
apply plugin: 'propdeps-eclipse'
apply plugin: 'idea'
apply plugin: 'eclipse-wtp'
apply plugin: 'jacoco'
apply plugin: 'maven'

apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'cloudfoundry'

allprojects {
    if (project.hasProperty('buildversion')) {
        project.version = project.buildversion
    } else {
        project.version = '1.0'
    }
}

sourceCompatibility = "${javaVersion}"
targetCompatibility = "${javaVersion}"

buildscript {

	ext {
		javaVersion = '1.7'
		springBootVersion = '1.2.0.M2'
		thucydidesVersion = '0.9.229'
	}

    repositories {
      jcenter()
      mavenLocal()
      mavenCentral()
	  maven { url 'http://repo.spring.io/plugins-release' }
    }

    dependencies {
      classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
      classpath 'org.springframework.build.gradle:propdeps-plugin:0.0.6'
      classpath 'org.cloudfoundry:cf-gradle-plugin:1.0.3'
    }
}

repositories {
    jcenter()
    mavenLocal()
    mavenCentral()
    maven { url "http://repo.spring.io/milestone" }
}

dependencies {
    // Spring Boot
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-data-jpa'
	compile 'org.springframework.boot:spring-boot-starter-cloud'
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    
    compile 'com.jayway.jsonpath:json-path:2.0.0'
    
    // JPA Persistence
    compile 'commons-dbcp:commons-dbcp:1.2.2'
    runtime 'mysql:mysql-connector-java:5.1.25'
    runtime 'com.h2database:h2:1.3.162'

    // Webjars
    compile 'org.webjars:bootstrap:3.1.1'
    compile 'org.webjars:angularjs:1.2.16'
    compile 'org.webjars:angular-ui:0.4.0-3'
    compile 'org.webjars:angular-ui-bootstrap:0.11.2'
    compile 'org.webjars:jquery:2.1.0-2'

  	// Project Lombok
  	providedCompile 'org.projectlombok:lombok:1.14.4'
	testCompile 'com.google.guava:guava-testlib:18.0'

	// Acceptance Testing
	testCompile "net.thucydides:thucydides-core:${thucydidesVersion}"
	testCompile "net.thucydides:thucydides-junit:${thucydidesVersion}"
    testCompile "com.jayway.restassured:rest-assured:2.3.2"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.9'
}

test {
    
    // Point acceptance tests to the base url for the deployed app. 
    systemProperty 'test_app_url', System.getProperty('test_app_url')
    
    // show standard out and standard error of the test JVM(s) on the console
    testLogging.showStandardStreams = true
    
}

// omit the version from the war file name, but leave it in manifest
war {
    ext.warversion = version
    version = ""
    manifest {
        attributes 'Implementation-Title': 'Spring Sample Application', 'Implementation-Version': ext.warversion
    }
}

cloudfoundry {
    target = "https://api.run.pivotal.io"
    space = "development"

    file = file("${war.archivePath}")
    uri = "spring-music-${randomWord}.cfapps.io"
    memory = 512
    instances = 1

    services {
        "music-mongodb" {
            label = "mongolab"
            plan = "sandbox"
        }
    }
}
